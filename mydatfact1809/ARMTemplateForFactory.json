{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mydatfact1809"
		},
		"BlobLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobLS'"
		},
		"CosmosDbNoSqlLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbNoSqlLS'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADFCDCCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CosmosDBDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CosmosCDCSink",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"cosmos": {},
									"StorageAccountSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CosmosCDCSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbNoSqlLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fiveminutestrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ADFCDCCosmosDB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2023-07-10T07:19:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADFCDCCosmosDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosCDCSink')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "CosmosDbNoSqlLS",
								"type": "LinkedServiceReference"
							},
							"name": "cosmos"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "BlobLS",
								"type": "LinkedServiceReference"
							},
							"name": "StorageAccountSink",
							"rejectedDataLinkedService": {
								"referenceName": "BlobLS",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          {_rid} as string,",
						"          {_ts} as long,",
						"          id as string,",
						"          isAlive as boolean,",
						"          FirstName as string,",
						"          LastName as string,",
						"          {_etag} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     container: 'sampleContainer',",
						"     storeType: 'olap',",
						"     format: 'document',",
						"     enableChangeFeed: true,",
						"     changeFeedStartFromTheBeginning: true,",
						"     captureIntermediateUpdate: false,",
						"     captureUserDeletes: true,",
						"     captureTxnTTLDeletes: true,",
						"     store: 'cosmosDB') ~> cosmos",
						"cosmos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     container: 'output',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: true,",
						"     insertable: false,",
						"     updateable: true,",
						"     upsertable: false,",
						"     keys:['id']) ~> StorageAccountSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSqlLS')]",
				"[concat(variables('factoryId'), '/linkedServices/BlobLS')]"
			]
		}
	]
}